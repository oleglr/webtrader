{"version":3,"sources":["../../../../src/cashier/withdraw.es6"],"names":["require","win","win_view","error_handler","console","error","err","$","growl","message","Withdraw","init","li","click","liveapi","cached","authorize","then","_init_win","html","catch","moveToTop","root","i18n","windows","createBlankWindow","title","resizable","collapsable","minimizable","maximizable","width","height","close","dialog","trigger","remove","open","destroy","unbind","_init_state","offset","top","my","left","at","css","track","module_id","is_unique","state","clear","_","debounce","obj","prop","route","value","empty_fields","validate","token_length","show","invalid_length","invalid_text","length","verify","token","text","test","agent","instructions","menu","choice","code","disabled","transfer","account","amount","loginid","local_storage","get","standard","url","iframe_visible","name","agents","commission","min_amount","max_amount","hint","currency","residence","checkAmount","e","scope","login_details","loginids","reduce","a","b","id","routes","update","r","email","type","isCryptoCurrency","send","verify_email","notice","back","unlock","cashier","verification_code","data","startsWith","Error","tncApprovalWin","init_win","iframe_loaded","onchanged","find","paymentagent_loginid","withdrawal_commission","amount_with_commission","with_commission","toFixed","confirm_transfer","request","paymentagent_withdraw","description","submit","req","transfer_between_accounts","account_from","split","account_to","isAvailable","is_mlt","is_mf","is_upgradable","forEach","push","get_settings","country_code","paymentagent_list","list","payout_currencies","rv","bind"],"mappings":"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","file":"withdraw.js","sourcesContent":["import $ from 'jquery';\r\nimport liveapi from 'websockets/binary_websockets';\r\nimport windows from 'windows/windows';\r\nimport rv from 'common/rivetsExtra';\r\nimport tncApprovalWin from 'cashier/uk_funds_protection';\r\nimport html from 'text!cashier/withdraw.html';\r\n\r\nrequire(['text!cashier/withdraw.html']);\r\nrequire(['css!cashier/withdraw.css']);\r\nlet win = null;\r\nlet win_view = null;\r\n\r\nlet error_handler = err => {\r\n    console.error(err);\r\n    $.growl.error({ message: err.message });\r\n};\r\n\r\nclass Withdraw {\r\n    init = li => {\r\n        li.click(() => {\r\n            if (!win) {\r\n                liveapi.cached.authorize().then(() => {\r\n                    this._init_win(html)\r\n                }).catch(error_handler);\r\n            } else\r\n                win.moveToTop();\r\n        });\r\n    }\r\n\r\n    _init_win = root => {\r\n        root = $(root).i18n();\r\n        win = windows.createBlankWindow(root, {\r\n            title: 'Withdraw funds',\r\n            resizable: true,\r\n            collapsable: false,\r\n            minimizable: true,\r\n            maximizable: true,\r\n            width: 700,\r\n            height: 400,\r\n            'data-authorized': true,\r\n            close: () => {\r\n                win.dialog('destroy');\r\n                win.trigger('dialogclose'); // TODO: figure out why event is not fired.\r\n                win.remove();\r\n                win = null;\r\n            },\r\n            open: () => {},\r\n            destroy: () => {\r\n                win_view && win_view.unbind();\r\n                win_view = null;\r\n            }\r\n        });\r\n\r\n        this._init_state(root);\r\n        win.dialog('open');\r\n\r\n        /* update dialog position, this way when dialog is resized it will not move*/\r\n        var offset = win.dialog('widget').offset();\r\n        offset.top = 110;\r\n        win.dialog(\"option\", \"position\", { my: offset.left, at: offset.top });\r\n        win.dialog('widget').css({\r\n            left: offset.left + 'px',\r\n            top: offset.top + 'px'\r\n        });\r\n        win.track({\r\n            module_id: 'withdraw',\r\n            is_unique: true\r\n        });\r\n    };\r\n\r\n    _init_state = root => {\r\n        var state = {\r\n            clear: _.debounce((obj, prop) => { obj[prop] = false }, 4000),\r\n            route: { value: 'menu' },\r\n            empty_fields: {\r\n                validate: false,\r\n                token_length: false,\r\n                show: () => {\r\n                    state.empty_fields.validate = true;\r\n                    state.clear(state.empty_fields, 'validate');\r\n                }\r\n            },\r\n            validate: {\r\n                invalid_length: false,\r\n                invalid_text: false,\r\n                length: () => {\r\n                    if (state.verify.token.length != 8) {\r\n                        state.validate.invalid_length = true;\r\n                        state.clear(state.validate, 'invalid_length');\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                },\r\n                text: () => {\r\n                    if (/[^1-9a-zA-Z'\\- ,.]/g.test(state.agent.instructions)) {\r\n                        state.validate.invalid_text = true;\r\n                        state.clear(state.validate, \"invalid_text\");\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n            },\r\n            menu: {\r\n                choice: ''\r\n            },\r\n            verify: {\r\n                token: '',\r\n                code: '',\r\n                disabled: false,\r\n            },\r\n            transfer: {\r\n                disabled: false,\r\n                account: '',\r\n                amount: '',\r\n                loginid: local_storage.get('authorize').loginid,\r\n                value: []\r\n            },\r\n            standard: {\r\n                url: '',\r\n                iframe_visible: false\r\n            },\r\n            agent: {\r\n                disabled: false,\r\n                loginid: '',\r\n                name: '',\r\n                agents: [],\r\n                commission: '',\r\n                amount: '',\r\n                min_amount: '',\r\n                max_amount: '',\r\n                hint: '',\r\n                currency: local_storage.get('authorize').currency,\r\n                residence: '',\r\n                instructions: '',\r\n                checkAmount: (e, scope) => {\r\n                    const amount = scope.agent.amount;\r\n                    if (amount === '') {\r\n                        return;\r\n                    }\r\n                    if (amount > scope.agent.max_amount) {\r\n                        scope.agent.amount = scope.agent.max_amount;\r\n                    }\r\n                    if (amount < 0) {\r\n                        scope.agent.amount = '';\r\n                    }\r\n                }\r\n            },\r\n            login_details: loginids().reduce(function(a, b) {\r\n                if (a.id === local_storage.get(\"authorize\").loginid) return a;\r\n                else return b\r\n            })\r\n        };\r\n        let { route, menu, verify, empty_fields, standard, agent, transfer, validate } = state;\r\n\r\n        let routes = { menu: 400, verify: 400, transfer: 400, 'transfer-done': 300, standard: 400, agent: 550, 'agent-confirm': 400, 'agent-done': 300 };\r\n        route.update = r => {\r\n            route.value = r;\r\n            win.dialog('option', 'height', routes[r]);\r\n        };\r\n\r\n        menu.click = choice => { /* choice is 'transfer', 'agent' or 'standard' */\r\n            menu.choice = choice;\r\n            route.update(choice !== 'transfer' ? 'verify' : 'transfer');\r\n\r\n            if (choice === 'transfer')\r\n                return;\r\n\r\n            const email = local_storage.get('authorize').email;\r\n            const type = choice === 'agent' ? 'paymentagent_withdraw' : 'payment_withdraw';\r\n\r\n            if(isCryptoCurrency(agent.currency) && (agent.currency !== 'DAI' || agent.currency !== 'UST')) {\r\n                agent.min_amount = 0.002;\r\n                agent.max_amount = 5;\r\n            } else {\r\n                agent.min_amount = 10;\r\n                agent.max_amount = 2000;\r\n            }\r\n\r\n            agent.hint = `Min: ${agent.min_amount} Max: ${agent.max_amount}`.i18n();\r\n            liveapi.send({\r\n                    verify_email: email,\r\n                    type: type\r\n                })\r\n                .then(() => $.growl.notice({ message: 'Verification code sent to '.i18n() + email }))\r\n                .catch(err => {\r\n                    error_handler(err);\r\n                    route.update('menu');\r\n                });\r\n        };\r\n\r\n        verify.back = () => {\r\n            verify.token = verify.code = '';\r\n            route.update('menu');\r\n        };\r\n\r\n        verify.unlock = () => {\r\n            if (!verify.token) {\r\n                empty_fields.show();\r\n                return;\r\n            }\r\n\r\n            if (!validate.length()) {\r\n                return;\r\n            }\r\n\r\n            if (menu.choice === 'standard') {\r\n                verify.disabled = true;\r\n                liveapi.send({\r\n                        cashier: 'withdraw',\r\n                        verification_code: verify.token\r\n                    })\r\n                    .then(data => {\r\n                        if (data.cashier.startsWith('ASK_')) { /* error code */\r\n                            throw new Error(data.cashier);\r\n                        }\r\n                        standard.url = data.cashier;\r\n                        verify.disabled = false;\r\n                        route.update('standard');\r\n                        verify.code = verify.token;\r\n                        verify.token = '';\r\n                    })\r\n                    .catch(err => {\r\n                        verify.disabled = false;\r\n                        if (err.code === \"ASK_UK_FUNDS_PROTECTION\") {\r\n                            tncApprovalWin.init_win().then().catch(err => {\r\n                                error_handler(err);\r\n                            });\r\n                            return;\r\n                        }\r\n                        error_handler(err);\r\n                    });\r\n            } else if (menu.choice === 'agent') {\r\n                verify.code = verify.token;\r\n                verify.token = '';\r\n                route.update('agent');\r\n            }\r\n        };\r\n\r\n        standard.iframe_loaded = () => {\r\n            if (standard.url)\r\n                standard.iframe_visible = true;\r\n        };\r\n\r\n        agent.onchanged = () => {\r\n            if (agent.loginid) {\r\n                let { withdrawal_commission, name } = agent.agents.find(a => a.paymentagent_loginid === agent.loginid);\r\n                agent.commission = withdrawal_commission;\r\n                agent.name = name;\r\n            } else {\r\n                agent.commission = '';\r\n                agent.name = '';\r\n            }\r\n        }\r\n\r\n        agent.amount_with_commission = () => {\r\n            var with_commission = (agent.amount || 0) * (100 - agent.commission) / 100;\r\n            return with_commission.toFixed(2);\r\n        }\r\n\r\n        agent.click = () => {\r\n            if (!agent.loginid) {\r\n                $.growl.error({ message: 'Please select a payment agent'.i18n() });\r\n                return;\r\n            }\r\n            if (!(agent.amount >= agent.min_amount && agent.amount <= agent.max_amount)) {\r\n                $.growl.error({ message: `Amount Min: ${agent.min_amount} Max: ${agent.max_amount}`.i18n() });\r\n                return;\r\n            }\r\n            if (agent.instructions && !validate.text()) {\r\n                return;\r\n            }\r\n\r\n            route.update('agent-confirm');\r\n        }\r\n\r\n        agent.confirm_transfer = () => {\r\n            var request = {\r\n                paymentagent_withdraw: 1,\r\n                paymentagent_loginid: agent.loginid,\r\n                currency: agent.currency,\r\n                amount: agent.amount * 1,\r\n                description: agent.instructions,\r\n                verification_code: verify.code\r\n            };\r\n            agent.disabled = true;\r\n            liveapi.send(request)\r\n                .then(data => {\r\n                    route.update('agent-done')\r\n                    agent.disabled = false;\r\n                })\r\n                .catch(err => {\r\n                    agent.disabled = false;\r\n                    route.update('menu') // because tokens are one time use.\r\n                    error_handler(err);\r\n                });\r\n        }\r\n\r\n        transfer.submit = () => {\r\n            if (transfer.account === '' || transfer.amount === '') {\r\n                empty_fields.show();\r\n                return;\r\n            }\r\n            var req = {\r\n                transfer_between_accounts: 1,\r\n                account_from: transfer.account.split(\"_to_\")[0],\r\n                account_to: transfer.account.split(\"_to_\")[1],\r\n                currency: agent.currency,\r\n                amount: transfer.amount\r\n            };\r\n            transfer.disabled = true;\r\n            liveapi.send(req)\r\n                .then(data => {\r\n                    transfer.account = transfer.account.split(\"_to_\")[1];\r\n                    route.update('transfer-done');\r\n                })\r\n                .catch(err => {\r\n                    error_handler(err);\r\n                    transfer.disabled = false;\r\n                });\r\n        }\r\n\r\n        transfer.isAvailable = () => {\r\n            if (state.login_details.is_mlt || state.login_details.is_mf) {\r\n                let is_upgradable = true;\r\n                loginids().forEach((id) => {\r\n                    if (id.id !== state.login_details.id && (id.is_mf || id.is_mlt)) {\r\n                        is_upgradable = false;\r\n                        transfer.value = [{\r\n                            value: state.login_details.id + \"_to_\" + id.id,\r\n                            text: \"from account (\" + state.login_details.id +\r\n                                \") to account (\" + id.id + \")\"\r\n                        }];\r\n                        transfer.value.push({\r\n                            value: id.id + \"_to_\" + state.login_details.id,\r\n                            text: \"from account (\" + id.id +\r\n                                \") to account (\" + state.login_details.id + \")\"\r\n                        });\r\n                        transfer.account = transfer.value[0].value;\r\n                    }\r\n                });\r\n\r\n                return !is_upgradable;\r\n            }\r\n        }\r\n\r\n        liveapi.cached.send({ get_settings: 1 })\r\n            .then(data => {\r\n                agent.residence = data.get_settings.country_code;\r\n                const currency = local_storage.get('currency');\r\n                return liveapi.cached.send({ paymentagent_list: agent.residence, currency  });\r\n            })\r\n            .then(data => {\r\n                agent.agents = data.paymentagent_list.list;\r\n            })\r\n            .catch(error_handler);\r\n\r\n        liveapi.send({ payout_currencies: 1 })\r\n            .then(data => {\r\n                agent.currency = data.payout_currencies[0];\r\n            }).catch(err => console.error(err));\r\n\r\n        win_view = rv.bind(root[0], state);\r\n    };\r\n};\r\n\r\nexport default new Withdraw();\r\n"]}
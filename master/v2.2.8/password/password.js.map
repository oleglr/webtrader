{"version":3,"sources":["../../../../src/password/password.es6"],"names":["password_win","password_win_view","init","$menuLink","click","init_password_win","moveToTop","root","$","html","i18n","windows","createBlankWindow","title","resizable","collapsable","minimizable","maximizable","height","close","dialog","remove","open","destroy","unbind","init_state","state","empty_fields","validate","clear","_","debounce","show","account","password","new_password","verify_password","btn","disabled","password_error_message","length","test","change","request","change_password","old_password","liveapi","send","then","data","message","growl","notice","require","login","defer","catch","err","error","rv","bind"],"mappings":"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","file":"password.js","sourcesContent":["/*\r\n * Created by amin on May 19, 2016.\r\n */\r\n\r\nimport liveapi from '../websockets/binary_websockets';\r\nimport windows from '../windows/windows';\r\nimport rv from '../common/rivetsExtra';\r\nimport _ from 'lodash';\r\nimport html from 'text!./password.html';\r\nimport 'css!./password.css';\r\n\r\nlet password_win = null;\r\nlet password_win_view = null;\r\n\r\nexport const init = ($menuLink) => {\r\n   $menuLink.click(() => {\r\n      if (!password_win)\r\n         init_password_win();\r\n      else\r\n         password_win.moveToTop();\r\n   });\r\n}\r\n\r\nconst init_password_win = () => {\r\n   const root = $(html).i18n();\r\n   password_win = windows.createBlankWindow(root, {\r\n      title: 'Change password'.i18n(),\r\n      resizable:false,\r\n      collapsable:false,\r\n      minimizable: false,\r\n      maximizable: false,\r\n      // width: 408,\r\n      height: 350,\r\n      'data-authorized': true,\r\n      close: () => {\r\n         password_win.dialog('destroy');\r\n         password_win.remove();\r\n         password_win = null;\r\n      },\r\n      open: () => { },\r\n      destroy: () => {\r\n         password_win_view && password_win_view.unbind();\r\n         password_win_view = null;\r\n      }\r\n   });\r\n\r\n   init_state(root);\r\n   password_win.dialog('open');\r\n}\r\n\r\nconst init_state = (root) => {\r\n   const state = {\r\n      empty_fields: {\r\n         validate: false,\r\n         clear: _.debounce(() => {\r\n            state.empty_fields.validate = false;\r\n         }, 2000),\r\n         show: () => {\r\n            state.empty_fields.validate = true;\r\n            state.empty_fields.clear();\r\n         }\r\n      },\r\n      account: {\r\n         password: '',\r\n         new_password: '',\r\n         verify_password: ''\r\n      },\r\n      btn: {\r\n         disabled: false,\r\n      },\r\n\r\n   };\r\n\r\n   state.password_error_message = () => {\r\n      const password = state.account.new_password;\r\n      if(password === '') return state.empty_fields.validate ? '* Please enter your new password'.i18n() : '';\r\n      if(password.length < 6) return '* Password must be 6 characters minimum'.i18n();\r\n      if(!/\\d/.test(password) || !/[a-z]/.test(password) || !/[A-Z]/.test(password)) {\r\n         return '* Password must contain uppercase letters and numbers'.i18n();\r\n      }\r\n      return '';\r\n   };\r\n\r\n   state.btn.change = () => {\r\n      state.empty_fields.show();\r\n      const account = state.account;\r\n      if(state.account.password === ''\r\n         || state.password_error_message() !== ''\r\n         || state.account.new_password !== state.account.verify_password) {\r\n         return;\r\n      }\r\n      const request = {\r\n         change_password: 1,\r\n         old_password: state.account.password,\r\n         new_password: state.account.new_password\r\n      };\r\n      state.btn.disabled = true;\r\n      liveapi.send(request)\r\n         .then((data) =>{\r\n            if(data.change_password !== 1){\r\n               throw { message: 'Failed to update the password'.i18n()};\r\n            }\r\n            state.btn.disabled = false;\r\n            $.growl.notice({ message: 'Password successfully updated.'.i18n()});\r\n            $.growl.notice({ message: 'Redirecting to oauth login page,<br/>Please use your new password to login.'.i18n()});\r\n            require(['oauth/login'], (login) => {\r\n               _.defer(() => login.login(), 1000);\r\n            });\r\n            password_win.dialog('close');\r\n         })\r\n         .catch((err) => {\r\n            state.btn.disabled = false;\r\n            $.growl.error({ message: err.message});\r\n         })\r\n   }\r\n\r\n   password_win_view = rv.bind(root[0], state);\r\n}\r\n\r\nexport default { init }\r\n"]}
{"version":3,"sources":["../../../../src/portfolio/portfolio.es6"],"names":["portfolioWin","table","balance_span","subscribed_contracts","init","li","click","initPortfolioWin","moveToTop","update_indicative","data","error","contract","proposal_open_contract","id","contract_id","bid_price","row","api","cols","perv_indicative","tr","find","is_valid_to_sell","removeClass","addClass","subscribed_before","subscribers","liveapi","events","on","proposalOpenContract","command","send","subscribe","then","catch","err","console","$","growl","message","forget_all","on_arrow_click","e","target","$target","tagName","hasClass","parentElement","transaction","_","last","require","viewTransaction","transaction_id","currency","on_balance","balance","undefined","update","lng","local_storage","get","value","active_symbols","on_transaction","action","view_button","i18n","longcode","Math","abs","amount","date_expiry","sell_expired","rows","add","draw","subscribe_to_contracts","remove","forget_the_contracts","windows","createBlankWindow","title","dialogClass","width","height","close","off","open","init_table","destroy","DataTable","refresh","header","parent","insertAfter","html","formatPrice","appendTo","dataTable","columns","render","val","rowId","paging","ordering","processing","track","module_id","is_unique","dialog","contracts","forEach","push","promises","map","forget","ids","filter","includes","Promise","all","processing_msg","attr","show","portfolio","buy_price","expiry_time","hide","resubscribe"],"mappings":"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","file":"portfolio.js","sourcesContent":["﻿import $ from 'jquery';\r\nimport windows from '../windows/windows';\r\nimport liveapi from '../websockets/binary_websockets';\r\nimport 'jquery-ui';\r\nimport 'datatables';\r\nimport 'jquery-growl';\r\nimport 'css!./portfolio.css';\r\n\r\nlet portfolioWin = null;\r\nlet table = null;\r\nlet balance_span = null;\r\nlet subscribed_contracts = [];\r\n\r\nexport const init = (li) => {\r\n    li.click(() => {\r\n        if(!portfolioWin)\r\n            initPortfolioWin();\r\n        else\r\n            portfolioWin.moveToTop();\r\n    });\r\n}\r\n\r\nconst update_indicative = (data) => {\r\n    if(data.error)\r\n        return;\r\n\r\n    const contract = data.proposal_open_contract;\r\n    const id = contract.contract_id,\r\n        bid_price = contract.bid_price;\r\n\r\n    if (table) {\r\n        const row = table.api().row('#' + id);\r\n        const cols = row.data();\r\n        if(!cols)\r\n            return; /* table might be empty */\r\n        const perv_indicative = cols[3];\r\n        cols[3] = bid_price; /* update the indicative column */\r\n        row.data(cols);\r\n\r\n        /* colorize indicative column on change */\r\n        const tr = table.find('#' + id);\r\n        if(!contract.is_valid_to_sell) {\r\n            tr.removeClass('indicative-red indicative-green').addClass('resale-not-offered');\r\n        } else {\r\n            tr.removeClass('resale-not-offered');\r\n            if(perv_indicative !== bid_price) {\r\n            tr.removeClass('indicative-red indicative-green')\r\n                .addClass((perv_indicative*1 < bid_price*1) ? 'indicative-green' : 'indicative-red');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlet subscribed_before = false;\r\nlet subscribers = 0;\r\nliveapi.events.on('logout',() => {\r\n    subscribed_before = false;\r\n    subscribers = 0;\r\n});\r\n\r\n/* command could be 'subscribe','forget' and 'resubscribe'. */\r\nconst proposalOpenContract = (command) => {\r\n    if(command === 'subscribe') {\r\n        ++subscribers;\r\n        if(!subscribed_before && subscribers > 0) {\r\n            liveapi.send({ proposal_open_contract: 1,subscribe: 1 })\r\n                .then((data) => { subscribed_before = true; })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                    $.growl.error({ message: err.message });\r\n                });\r\n        }\r\n    }\r\n    else if(command === 'forget') {\r\n        --subscribers;\r\n        if(subscribed_before && subscribers === 0) {\r\n            liveapi.send({ forget_all: 'proposal_open_contract' })\r\n                .then((data) => {\r\n                    subscribed_before = false;\r\n                })\r\n                .catch((err) => {\r\n                    subscribed_before = false;\r\n                    console.error(err.message);\r\n                });\r\n        }\r\n    }\r\n    else if( command === 'resubscribe' ) {\r\n        liveapi.send({ forget_all: 'proposal_open_contract' })\r\n            .then((data) => {\r\n                subscribed_before = false;\r\n                --subscribers;\r\n                proposalOpenContract('subscribe'); /* subscribe again */\r\n            })\r\n            .catch((err) => {\r\n                subscribed_before = false;\r\n                console.error(err.message);\r\n            });\r\n    }\r\n    else {\r\n        console.error('wrong command!');\r\n        return;\r\n    }\r\n}\r\n\r\nconst on_arrow_click = (e) => {\r\n    const target = e.target;\r\n    const $target = $(target);\r\n    if(target.tagName !== 'BUTTON' || $target.hasClass('button-disabled')) return;\r\n    const tr = target.parentElement.parentElement;\r\n    let transaction = table.api().row(tr).data();\r\n    transaction = _.last(transaction);\r\n    $target.addClass('button-disabled');\r\n    require(['viewtransaction/viewTransaction'], (viewTransaction) => {\r\n        viewTransaction.init(transaction.contract_id, transaction.transaction_id)\r\n            .then(() => $target.removeClass('button-disabled'))\r\n            .catch(err => {\r\n                $target.removeClass('button-disabled');\r\n                $.growl.error({ message: err.message });\r\n            });\r\n    });\r\n}\r\n\r\nconst initPortfolioWin = () => {\r\n    /* refresh blance on blance change */\r\n    let currency = '';\r\n    const on_balance = liveapi.events.on('balance',(data) => {\r\n        if(data.balance !== undefined && data.balance.currency !== undefined) {\r\n           currency = data.balance.currency;\r\n           balance_span && balance_span && balance_span.update(data.balance.balance);\r\n        }\r\n    });\r\n    const lng = (local_storage.get('i18n') || {value:'en'}).value;\r\n    const active_symbols = local_storage.get('active_symbols'); \r\n    /* refresh portfolio when a new contract is added or closed */\r\n    const on_transaction = liveapi.events.on('transaction',(data) => {\r\n        const transaction = data.transaction;\r\n        if(transaction.action === 'buy') {\r\n            const view_button = '<button>View</button>'.i18n();\r\n            const row = [\r\n                transaction.transaction_id,\r\n                transaction.longcode,\r\n                Math.abs(transaction.amount),\r\n                '0.00',\r\n                view_button,\r\n                transaction.contract_id, /* for jq-datatables rowId */\r\n                transaction, /* data for view transaction dailog - when clicking on arrows */\r\n            ];\r\n            transaction.date_expiry && liveapi.sell_expired(transaction.date_expiry)\r\n            table.api().rows.add([row]);\r\n            table.api().draw();\r\n            subscribe_to_contracts([transaction]);\r\n        } else if (transaction.action === 'sell') {\r\n            const tr = table.find('#' + transaction.contract_id)[0];\r\n            table.api().row(tr).remove();\r\n            table.api().draw();\r\n            forget_the_contracts([transaction]);\r\n        }\r\n    });\r\n\r\n    liveapi.send({ balance: 1 })\r\n        .then((data) => {\r\n            currency = data.balance.currency;\r\n            portfolioWin = windows.createBlankWindow($('<div/>'), {\r\n                title: 'Portfolio'.i18n(),\r\n                dialogClass: 'portfolio',\r\n                width: 700 ,\r\n                height: 400,\r\n                'data-authorized': 'true',\r\n                close: () => {\r\n                    forget_the_contracts(subscribed_contracts);\r\n                    /* un-register proposal_open_contract handler */\r\n                    liveapi.events.off('proposal_open_contract', update_indicative);\r\n                },\r\n                open: () => {\r\n                    init_table();\r\n                    /* register handler for proposal_open_contract */\r\n                    liveapi.events.on('proposal_open_contract', update_indicative);\r\n                },\r\n                destroy: () => {\r\n                    table && table.DataTable().destroy(true);\r\n                    portfolioWin = null;\r\n                    liveapi.events.off('balance', on_balance);\r\n                    liveapi.events.off('transaction', on_transaction);\r\n                },\r\n                refresh: () => {\r\n                    liveapi.send({ balance: 1 }).catch((err) => { console.error(err); $.growl.error({ message: err.message }); });\r\n                    forget_the_contracts(subscribed_contracts).then(init_table);\r\n                }\r\n            });\r\n\r\n            const header = portfolioWin.parent().find('.ui-dialog-title').addClass('with-content');\r\n            balance_span = $('<span class=\"span-in-dialog-header\" />')\r\n                .insertAfter(header);\r\n            balance_span.update = (balance) => {\r\n                balance_span.html('Account balance: <strong>'.i18n() +  formatPrice(balance, currency) + '</strong>');\r\n            };\r\n\r\n            table = $(\"<table width='100%' class='portfolio-dialog hover'/>\");\r\n            table.appendTo(portfolioWin);\r\n            table = table.dataTable({\r\n                data: [],\r\n                columns: [\r\n                    { title: 'Ref.'.i18n() },\r\n                    { title: 'Contract Details'.i18n() },\r\n                    {\r\n                        title: 'Purchase'.i18n(),\r\n                        render: (val) => ('<span class=\"bold\">' + formatPrice(val,currency) + '</span>')\r\n                    },\r\n                    {\r\n                        title: 'Indicative'.i18n(),\r\n                        render: (val) => ('<span class=\"bold\">' + formatPrice(val,currency) + '</span>')\r\n                    },\r\n                    { title: '' }\r\n                ],\r\n                rowId : '5', /* jQ datatables support selecting rows based on rowId https://datatables.net/reference/type/row-selector\r\n                                we want not to query rows everytime we update the indicative column */\r\n                paging: false,\r\n                ordering: false,\r\n                processing: true\r\n            });\r\n            table.parent().addClass('hide-search-input');\r\n\r\n            portfolioWin.on('click', on_arrow_click);\r\n            portfolioWin.track({\r\n                module_id: 'portfolio',\r\n                is_unique: true,\r\n                data: null\r\n            });\r\n            portfolioWin.dialog('open');\r\n        })\r\n        .catch(\r\n           (err) => console.error(err)\r\n        );\r\n}\r\n\r\nconst subscribe_to_contracts = (contracts) => {\r\n    contracts.forEach((contract) => {\r\n        subscribed_contracts.push(contract);\r\n        liveapi.proposal_open_contract\r\n            .subscribe(contract.contract_id)\r\n            .catch(\r\n               (err) => console.error({ message: err.message })\r\n            );\r\n    });\r\n}\r\n\r\nconst forget_the_contracts = (contracts) => {\r\n    const promises = contracts.map((contract) => {\r\n        return liveapi.proposal_open_contract\r\n                .forget(contract.contract_id)\r\n                .catch(\r\n                   (err) => $.growl.error({ message: err.message })\r\n                );\r\n    });\r\n    const ids = _.map(contracts, 'contract_id');\r\n    subscribed_contracts = subscribed_contracts.filter(\r\n      (contract) => (_.includes(ids, contract.contract_id) === false)\r\n    );\r\n    return Promise.all(promises);\r\n}\r\n\r\nconst init_table = async () => {\r\n    const processing_msg = $('#' + table.attr('id') + '_processing').show();   \r\n    try {\r\n        const data = await liveapi.send({ portfolio: 1 });\r\n        const contracts = (data.portfolio && data.portfolio.contracts);\r\n            //|| [\r\n            //    {\r\n            //        symbol: '', shortcode: '', contract_id: '', longcode: '', expiry_time: 0, currency: '',\r\n            //        date_start: 0, purchase_time: 0, buy_price: '', contract_type: '', payout: ''\r\n            //    }\r\n            //];\r\n\r\n        const view_button = '<button>View</button>'.i18n();\r\n        const rows = contracts.map((contract) => {\r\n            return [\r\n                contract.transaction_id,\r\n                contract.longcode,\r\n                contract.buy_price,\r\n                '0.00',\r\n                view_button,\r\n                contract.contract_id, /* for jq-datatables rowId */\r\n                contract, /* data for view transaction dailog - when clicking on arrows */\r\n            ];\r\n        });\r\n        /* register callback to sell contract on expiration */\r\n        contracts.forEach(contract => liveapi.sell_expired(contract.expiry_time));\r\n        subscribe_to_contracts(contracts);\r\n\r\n        /* update the table */\r\n        table.api().rows().remove();\r\n        table.api().rows.add(rows);\r\n        table.api().draw();\r\n        processing_msg.hide();\r\n    }\r\n    catch(err) {\r\n        console.error(err);\r\n        table.api().rows().remove();\r\n        table.api().draw();\r\n        processing_msg.hide();\r\n        $.growl.error({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const proposal_open_contract = {\r\n    subscribe: () => proposalOpenContract('subscribe'),\r\n    forget: () => proposalOpenContract('forget'),\r\n    resubscribe: () => proposalOpenContract('resubscribe')\r\n};\r\n\r\nexport default { init, proposal_open_contract }; \r\n"]}
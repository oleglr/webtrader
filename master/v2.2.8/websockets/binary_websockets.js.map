{"version":3,"sources":["../../../../src/websockets/binary_websockets.es6"],"names":["is_authenitcated_session","socket","is_website_up","queued_requests","get_app_id","app_ids","JSON","parse","app_ids_json","DEFAULT_APP_ID","href","window","location","stored_app_id","url","lastIndexOf","app_id","localStorage","setItem","get_server_url","getItem","get_socket_url","server_url","socket_url","connect","i18n_name","local_storage","get","value","api_url","ws","WebSocket","addEventListener","onopen","onclose","onmessage","event","$","growl","error","message","i18n","timeoutIsSet","require","tracker","trade_dialogs","get_trade_dialogs","unique_dialogs","get_unique_dialogs","fire_event","setTimeout","api","cached","authorize","then","reopen_trade_dialogs","reopen_unique_dialogs","catch","err","callbacks","buffered_execs","buffered_sends","unresolved_promises","cached_promises","is_connected","readyState","send","stringify","website_status","subscribe","length","data","shift","req_id","key","promise","sent_before","reject","msg_type","i","cb","echo_req","resolve","needs_authentication","prop","balance","statement","profit_table","portfolio","proposal_open_contract","buy","sell","get_self_exclusion","set_self_exclusion","req_id_counter","send_request","Promise","push","authenticate","token","auth_successfull","val","set","is_jpy_account","landing_company_name","indexOf","ok","remove","up","code","invalidate","logout","close","send_authenticated_request","send_it","bind","oauth","name","args","fns","forEach","apply","undefined","timeout_promise","milliseconds","sell_expired_timeouts","proposal_op_store","proposal_open_contract_forget","events","on","off","index","splice","on_till","once_cb","done","contract_id","subscribers","stream_id","id","forget","proposal","forgetter","ex","execute","switch_account","inx","map","acc","account","unshift","forget_all","console","re_authorize","timeout","is_authenticated","sell_expired","epoch","now","Date","getTime","site_status","toLowerCase","is_sent","transaction","setInterval"],"mappings":"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","file":"binary_websockets.js","sourcesContent":["/**\r\n * Created by arnab on 2/24/15.\r\n */\r\n\r\nimport $ from 'jquery';\r\nimport app_ids_json from 'text!../oauth/app_id.json';\r\nimport 'common/util';\r\n\r\nlet is_authenitcated_session = false; /* wether or not the current websocket session is authenticated */\r\nlet socket = null;\r\nlet is_website_up = false;\r\nlet queued_requests = {};\r\n\r\n\r\nconst get_app_id = () => {\r\n  const app_ids = JSON.parse(app_ids_json);\r\n  const DEFAULT_APP_ID = 11;\r\n  const href = window.location.href;\r\n  let stored_app_id = '';\r\n\r\n  for (const url in app_ids) {\r\n      if (href.lastIndexOf(url, 0) === 0) {\r\n        stored_app_id = app_ids[url];\r\n        break;\r\n      }\r\n  }\r\n\r\n  const app_id = stored_app_id || DEFAULT_APP_ID;\r\n  localStorage.setItem('config.app_id', app_id);\r\n\r\n  return app_id;\r\n};\r\n\r\nconst get_server_url = () => localStorage.getItem('config.server_url') || 'frontend.binaryws.com';\r\n\r\nconst get_socket_url = () => {\r\n   const server_url = get_server_url();\r\n   return `wss://${server_url}/websockets/v3`;\r\n};\r\n\r\nexport const socket_url = get_socket_url();\r\nexport const app_id = localStorage.getItem('config.app_id') || get_app_id();\r\nexport const server_url = get_server_url();\r\n\r\nconst connect = () => {\r\n   const i18n_name = (local_storage.get('i18n') || { value: 'en' }).value;\r\n   const api_url = `${socket_url}?l=${i18n_name}&app_id=${app_id}`;\r\n   const ws = new WebSocket(api_url);\r\n\r\n   ws.addEventListener('open', onopen);\r\n   ws.addEventListener('close', onclose);\r\n   ws.addEventListener('message', onmessage);\r\n\r\n   ws.addEventListener('error',(event) => {\r\n      $.growl.error({message: 'Connection error.'.i18n()});\r\n      onclose(); // try to reconnect\r\n   });\r\n\r\n   return ws;\r\n}\r\n\r\nlet timeoutIsSet = false;\r\nconst onclose = () => {\r\n   require(['windows/tracker'], (tracker) => {\r\n      const trade_dialogs = tracker.get_trade_dialogs();\r\n      const unique_dialogs = tracker.get_unique_dialogs();\r\n      is_authenitcated_session = false;\r\n      fire_event('logout');\r\n      /**\r\n       *  The connection is closed, resubscrible to tick streaming.\r\n       *  We have to make sure that resubscribe is atleast 1 second delayed\r\n       **/\r\n        if (timeoutIsSet) { return; }\r\n        timeoutIsSet = true;\r\n        setTimeout(() => {\r\n            timeoutIsSet = false;\r\n            socket = connect();\r\n\r\n            if(local_storage.get('oauth')) {\r\n              api.cached.authorize().then(\r\n                 () => {\r\n                       tracker.reopen_trade_dialogs(trade_dialogs);\r\n                       setTimeout( () => tracker.reopen_unique_dialogs(unique_dialogs), 0);\r\n                 }\r\n              )\r\n               .catch((err) => {\r\n                  $.growl.error({ message: err.message });\r\n               });\r\n            }\r\n        }, 1000);\r\n   });\r\n}\r\n\r\nconst callbacks = {};\r\nconst buffered_execs = [];\r\nconst buffered_sends = [];\r\nconst unresolved_promises = { /* req_id: { resolve: resolve, reject: reject, data: data } */};\r\nconst cached_promises = { /* key: {data: data, promise: promise } */}; /* requests that have been cached */\r\nconst is_connected = () => (socket && socket.readyState === 1);\r\n\r\n\r\nconst onopen = () => {\r\n   /**\r\n    * First thing to do -> subscribe to website_status\r\n    */\r\n   socket.send(JSON.stringify({ website_status: 1, subscribe: 1 }));\r\n   /* send buffered sends */\r\n   while (buffered_sends.length > 0) {\r\n      const data = buffered_sends.shift();\r\n      if(!unresolved_promises[data.req_id]) {\r\n         socket.send(JSON.stringify(data));\r\n      }\r\n   }\r\n   /* if the connection got closed while the result of an unresolved request\r\n           is not back yet, issue the same request again */\r\n   for(const key in unresolved_promises) {\r\n      const promise = unresolved_promises[key];\r\n      if(!promise) continue;\r\n      if(promise.sent_before) { /* reject if sent once before */\r\n         promise.reject({message: 'Connection closed.'.i18n()});\r\n      } else { /* send */\r\n         promise.sent_before = true;\r\n         socket.send(JSON.stringify(promise.data));\r\n      }\r\n   }\r\n   while (buffered_execs.length > 0)\r\n      buffered_execs.shift()();\r\n}\r\n\r\n/* execute buffered executes */\r\nconst onmessage = (message) => {\r\n   const data = JSON.parse(message.data);\r\n\r\n   /* do not block the main thread */\r\n   /* note: this will prevent subscribers from altering callbacks[data.msg_type] array\r\n           while we are iterating on it. this is especially important for tick trades */\r\n   callbacks[data.msg_type] = callbacks[data.msg_type] || [];\r\n   for(let i = 0; i < callbacks[data.msg_type].length; i++){\r\n      const cb = callbacks[data.msg_type][i];\r\n      setTimeout(\r\n         () => cb(data)\r\n         , 0);\r\n   }\r\n\r\n   const key = data.req_id;\r\n   const promise = unresolved_promises[key] || queued_requests[key];\r\n   if (promise) {\r\n      delete unresolved_promises[key];\r\n      delete queued_requests[key];\r\n\r\n      if (data.error) {\r\n         data.error.echo_req = data.echo_req;\r\n         data.error.req_id = data.req_id;\r\n         promise.reject(data.error);\r\n      }\r\n      else\r\n         promise.resolve(data);\r\n   }\r\n}\r\n\r\nsocket = connect(); // connect\r\n\r\n/* whether the given request needs authentication or not */\r\nconst needs_authentication = (data) => {\r\n   for (const prop in\r\n      { balance: 1, statement: 1,\r\n         profit_table: 1, portfolio: 1,\r\n         proposal_open_contract: 1, buy: 1, sell: 1,\r\n         get_self_exclusion : 1, set_self_exclusion : 1 })\r\n      if (prop in data)\r\n      return true;\r\n   return false;\r\n};\r\n\r\n/* send a raw request and return a promise */\r\nlet req_id_counter = 0;\r\nconst send_request = (data) => {\r\n   data.req_id = ++req_id_counter;\r\n\r\n   return new Promise((resolve,reject) => {\r\n      if(!is_website_up) {\r\n            //Store any requests sent when website is down.\r\n            queued_requests[data.req_id] = { resolve: resolve, reject: reject, data: data };\r\n            return;\r\n      }\r\n      unresolved_promises[data.req_id] = { resolve: resolve, reject: reject, data: data };\r\n      if (is_connected()) {\r\n         socket.send(JSON.stringify(data));\r\n      } else\r\n         buffered_sends.push(data);\r\n   });\r\n};\r\n\r\n/* authenticate and return a promise */\r\nconst authenticate = (token) => {\r\n   let auth_successfull = false;\r\n   const data = { authorize: token },\r\n      key = JSON.stringify(data),\r\n      promise = send_request(data);\r\n\r\n   return promise\r\n      .then((val) => {\r\n         is_authenitcated_session = true;\r\n         local_storage.set('authorize', val.authorize); /* we can use the 'email' field retruned later */\r\n         const is_jpy_account = val.authorize.landing_company_name.indexOf('japan') !== -1;\r\n         if(!is_jpy_account) {\r\n            fire_event('login', val);\r\n         }\r\n         if(local_storage.get('oauth-login')) {\r\n            const ok = local_storage.get('oauth-login').value;\r\n            local_storage.remove('oauth-login');\r\n            if(ok && !is_jpy_account) {\r\n               fire_event('oauth-login', val);\r\n            }\r\n         }\r\n         auth_successfull = true;\r\n         cached_promises[key] = { data: data, promise: promise }; /* cache successfull authentication */\r\n\r\n         return val; /* pass the result */\r\n      })\r\n      .catch((up) => {\r\n         if (up.code!==\"SelfExclusion\" && !auth_successfull) {    /* authentication request is failed, clear local_storage */\r\n            is_authenitcated_session = false;\r\n            fire_event('logout');\r\n            local_storage.remove('oauth');\r\n         }\r\n         delete cached_promises[key];\r\n         throw up; /* pass the exception to next catch */\r\n      });\r\n};\r\n\r\n/* un-athenticate current session */\r\nexport const invalidate = () => {\r\n   local_storage.remove('oauth');\r\n   local_storage.remove('authorize');\r\n   fire_event(\"reset_realitycheck\");\r\n   fire_event(\"reset_accountstatus\");\r\n\r\n   api.send({logout: 1}) /* try to logout and if it fails close the socket */\r\n      .catch((err) =>{\r\n         $.growl.error({ message: err.message });\r\n         socket.close();\r\n      });\r\n   /* remove authenticated cached requests as well as authorize requests */\r\n   for(const i in cached_promises)\r\n      if(needs_authentication(cached_promises[i].data) || ('authorize' in cached_promises[i].data))\r\n         delete cached_promises[i];\r\n   is_authenitcated_session = false;\r\n}\r\n\r\n/* first authenticate and then send the request */\r\nconst send_authenticated_request = (data) => {\r\n   if (is_authenitcated_session)\r\n      return send_request(data);\r\n\r\n   const send_it = send_request.bind(null,data);\r\n\r\n   if(local_storage.get('oauth')) {\r\n      const oauth = local_storage.get('oauth');\r\n      let token = oauth[0].token;\r\n      return authenticate(token)\r\n         .then(send_it)\r\n         .catch((err) => {\r\n            $.growl.error({ message: err.message });\r\n         });;\r\n   }\r\n   else\r\n      return Promise.reject({ message: 'Please log in'.i18n()});\r\n};\r\n\r\n/* fire a custom event and call registered callbacks(api.events.on(name)) */\r\nconst fire_event =(name , ...args) =>{\r\n   const fns = callbacks[name] || [];\r\n   fns.forEach((cb) => {\r\n      setTimeout(\r\n         () => cb.apply(undefined, args)\r\n         ,0);\r\n   });\r\n}\r\n\r\n/* the current websocket api (v3) does not return a result for closed markets,\r\n       use this a a temporary workaround to timeout 'ticks_history' api call while laoding charts,\r\n       TODO: wait for backend to fix this! */\r\nconst timeout_promise =(key, milliseconds) => {\r\n   setTimeout(() => {\r\n      const promise = unresolved_promises[key];\r\n      if (promise) {\r\n         delete unresolved_promises[key];\r\n         promise.reject({message: 'Timeout for websocket request'.i18n()});\r\n      }\r\n   },milliseconds);\r\n};\r\n\r\nconst sell_expired_timeouts = {};\r\nconst proposal_op_store =  {/* contract_id: { subscribers: n, promise: promise, stream_id: '' } */};\r\nconst proposal_open_contract_forget =  {/* contract_id:  promise */};\r\n\r\nexport const events = {\r\n   on: (name, cb) => {\r\n      (callbacks[name] = callbacks[name] || []).push(cb);\r\n      return cb;\r\n   },\r\n   off: (name, cb) =>{\r\n      if(callbacks[name]) {\r\n         const index = callbacks[name].indexOf(cb);\r\n         index !== -1 && callbacks[name].splice(index, 1);\r\n      }\r\n   },\r\n   /* callback function should return true to unsubscribe */\r\n   on_till:(name, cb) =>{\r\n      const once_cb = (...args) => {\r\n         const done = cb(...args);\r\n         if(done)\r\n            api.events.off(name,once_cb);\r\n      }\r\n      api.events.on(name, once_cb);\r\n   }\r\n}\r\n\r\nexport const proposal_open_contract = {\r\n   subscribe: (contract_id) => {\r\n      /* already subscribed */\r\n      if(proposal_op_store[contract_id] && proposal_op_store[contract_id].subscribers > 0) {\r\n         proposal_op_store[contract_id].subscribers++;\r\n         return proposal_op_store[contract_id].promise;\r\n      }\r\n      /* subscribe and keep the promise */\r\n      const promise = api.send({proposal_open_contract: 1, contract_id: contract_id, subscribe: 1})\r\n         .then((data) => {\r\n            /* keep stream_id to easily forget */\r\n            proposal_op_store[contract_id].stream_id = data.proposal_open_contract.id;\r\n            return data;\r\n         })\r\n         .catch((up) => {\r\n            proposal_op_store[contract_id] = undefined;\r\n            throw up;\r\n         });\r\n      proposal_op_store[contract_id] = { subscribers: 1, promise: promise };\r\n      return promise;\r\n   },\r\n   forget: (contract_id) => {\r\n      const proposal = proposal_op_store[contract_id];\r\n      const forget = proposal_open_contract_forget[contract_id];\r\n      if(!proposal) {\r\n         return forget || Promise.resolve(); /* contract is being forgetted or does not exit */\r\n      }\r\n      if(proposal.subscribers == 0) {\r\n         return forget; /* contract is being forgetted */\r\n      }\r\n      proposal.subscribers--;\r\n      if(proposal.subscribers > 0) { /* there are still subscribers to this contract_id */\r\n         return Promise.resolve();\r\n      }\r\n      const forgetter = () => {\r\n         proposal_op_store[contract_id] = undefined;\r\n         return api.send({forget: proposal.stream_id})\r\n            .catch((up) => {\r\n               proposal_open_contract_forget[contract_id] = undefined;\r\n               throw up;\r\n            })\r\n            .then((data) => {\r\n               proposal_open_contract_forget[contract_id] = undefined;\r\n               return data;\r\n            })\r\n            .catch((err) => {\r\n               $.growl.error({ message: err.message });\r\n            });\r\n      };\r\n      if(proposal.stream_id) {\r\n         proposal_open_contract_forget[contract_id] = forgetter();\r\n      } else {\r\n         proposal_open_contract_forget[contract_id] = proposal.promise\r\n            .catch((ex) => { return; })\r\n            .then((data) => {\r\n               if(proposal.stream_id) /* proposal request had not exceptions */\r\n                  return forgetter();\r\n               else return; /* no stream, no need to forget */\r\n            })\r\n            .catch((err) => {\r\n               $.growl.error({ message: err.message });\r\n            });\r\n      }\r\n      return proposal_open_contract_forget[contract_id];\r\n   }\r\n}\r\n\r\n/* execute callback when the connection is ready */\r\nexport const execute = (cb) => {\r\n   if (is_connected())\r\n      setTimeout(cb, 0);// always run the callback async\r\n   else\r\n      buffered_execs.push(cb);\r\n}\r\n\r\n/* switch account */\r\nexport const switch_account = (id) => {\r\n   const oauth = local_storage.get('oauth');\r\n   if(!oauth) {\r\n      return Promise.reject({ message: 'Account token not found.'.i18n() });\r\n   }\r\n\r\n   const inx = oauth.map((acc) => acc.id).indexOf(id);\r\n   if(inx === -1) {\r\n      return promise.reject({ message: 'Account id not found.'.i18n() });\r\n   }\r\n\r\n   /* move the new account to the front of oauth array */\r\n   const account = oauth[inx];\r\n   oauth.splice(inx,1);\r\n   oauth.unshift(account);\r\n   local_storage.set('oauth', oauth);\r\n\r\n   /* remove authenticated cached requests as well as authorize requests */\r\n   for(const i in cached_promises)\r\n      if(needs_authentication(cached_promises[i].data) || ('authorize' in cached_promises[i].data))\r\n         delete cached_promises[i];\r\n   /* back removes all tokens on {logout: 1} request, so we simply reauthenticate\r\n             with the new token without logging out first! ot switch accounts */\r\n   is_authenitcated_session = false;\r\n\r\n   /* backend doesn't respect registered authenticated streams :/ */\r\n   api.send({forget_all: 'transaction'})\r\n      .catch((err) => console.error(err));\r\n\r\n   api.send({forget_all: 'balance'})\r\n      .catch((err) => console.error(err));\r\n\r\n   return api.cached.authorize().then(\r\n      (data) => fire_event(\"switch_account\", data) \r\n   )\r\n   .catch((err) => {\r\n      $.growl.error({ message: err.message });\r\n   });;\r\n}\r\n\r\n/* if you want a request to be cached, that is when multiple modules request\r\n*  the same data or a module request a data multiple times, instead of calling\r\n*  liveapi.send can liveapi.cached.send.\r\n*  node: this will only cache if the result was successfull */\r\nexport const cached  = {\r\n   send:(data) => {\r\n      const key = JSON.stringify(data);\r\n      /* if there is a cached promise for this key (let say P), return P.\r\n       * assume P is in pending state, when P is fullfiled all attached .then() calls will run.\r\n       * assume P is in rejected state (or in fullfiled state), the changed .then() calls will be immediately rejected(or fullfiled).  */   \r\n       if (cached_promises[key])\r\n         return cached_promises[key].promise;\r\n      /* We don't want to cache promises that are rejected,\r\n                   Clear the cache in case of promise rejection */\r\n      cached_promises[key] = { data: data, promise: null };\r\n      return cached_promises[key].promise = api.send(data)\r\n         .then(\r\n            (val) => val, /* on resolve: do nothing */\r\n            (up) => {\r\n               delete cached_promises[key]; throw up;\r\n            } /* on reject: clear cache */\r\n         )\r\n         .catch((err) => {\r\n            $.growl.error({ message: err.message });\r\n         });\r\n   },\r\n   /* return the promise from last successfull authentication request,\r\n               if the session is not already authorized will send an authentication request */\r\n   authorize: (re_authorize) => {\r\n      const oauth = local_storage.get('oauth');\r\n      const token = oauth && oauth[0] && oauth[0].token,\r\n         key = JSON.stringify({ authorize: token });\r\n\r\n      if (is_authenitcated_session && token && cached_promises[key] && !re_authorize){\r\n            return cached_promises[key].promise;\r\n      }\r\n\r\n      return token ? authenticate(token) : /* we have a token => autheticate */\r\n         Promise.reject('Please log in.'.i18n());\r\n   }\r\n}\r\n\r\n/* sends a request and returns an es6-promise */\r\nexport const send = (data, timeout) => {\r\n   if (data && needs_authentication(data))\r\n      return send_authenticated_request(data);\r\n\r\n   const promise = send_request(data);\r\n   if(timeout) timeout_promise(data.req_id, timeout); //NOTE: \"timeout\" is a temporary fix for backend, try not to use it.\r\n   return promise;\r\n}\r\n\r\n/* whether current session is authenticated or not */\r\nexport const is_authenticated = () => is_authenitcated_session;\r\n\r\nexport const sell_expired = (epoch) => {\r\n   const now = (new Date().getTime())/1000 | 0;\r\n   epoch = epoch || now+1; // if epoch is undefined will try to sell expired contract 3 seconds later.\r\n   if(!sell_expired_timeouts[epoch] && epoch*1 > now) {\r\n      sell_expired_timeouts[epoch] = setTimeout(() => {\r\n         sell_expired_timeouts[epoch] = undefined;\r\n         api.send({sell_expired:1}).catch((err) => console.error(err));\r\n      }, (epoch+2 - now)*1000);\r\n   }\r\n}\r\n\r\nconst api = {\r\n   events,\r\n   proposal_open_contract,\r\n   execute,\r\n   switch_account,\r\n   cached,\r\n   send,\r\n   is_authenticated,\r\n   sell_expired,\r\n   invalidate,\r\n   app_id,\r\n   socket_url,\r\n   server_url\r\n}\r\n/* subscribe to website_status */\r\napi.events.on('website_status', (data) => {\r\n   is_website_up = data.website_status && data.website_status.site_status.toLowerCase() === 'up';\r\n   if(is_website_up) {\r\n         //Resend all the queued requests\r\n         for(let i in queued_requests) {\r\n               //Don't send same requests multiple times.\r\n               if(!queued_requests[i].is_sent) {\r\n                  socket.send(JSON.stringify(queued_requests[i].data));\r\n                  queued_requests[i].is_sent = 1;\r\n               }\r\n         }\r\n   }\r\n});\r\n/* always register for transaction & balance streams */\r\napi.events.on('login',() => {\r\n   api.send({transaction: 1, subscribe:1})\r\n      .catch((err) => console.error(err));\r\n\r\n   api.send({balance: 1, subscribe:1})\r\n      .catch((err) => console.error(err));\r\n});\r\n/* always forget transaction & balance streams on logout */\r\napi.events.on('logout',() => {\r\n   api.send({forget_all: 'transaction'})\r\n      .catch((err) => console.error(err));\r\n\r\n   api.send({forget_all: 'balance'})\r\n      .catch((err) => console.error(err));\r\n});\r\n\r\n/* backend closes connection if there is no activity in the websocket connection */\r\n setInterval(() => api.send({ \"ping\": 1 }), 30000);\r\n\r\nexport default api;\r\n"]}
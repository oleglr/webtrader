{"version":3,"sources":["../../../../src/websockets/validateToken.es6"],"names":["lang","local_storage","get","value","url","socket_url","app_id","token","Promise","resolve","reject","ws","WebSocket","addEventListener","send","JSON","stringify","data","parse","msg","authorize","close","event","error"],"mappings":";;;;;;AAAA;;;;;;;;;;;;AAeA,MAAMA,OAAO,CAACC,cAAcC,GAAd,CAAkB,MAAlB,KAA6B,EAACC,OAAM,IAAP,EAA9B,EAA4CA,KAAzD;AACA,MAAMC,MAAMC,gCAAa,UAAb,GAA0BC,yBAA1B,GAAmC,KAAnC,GAA0CN,IAAtD;;oBAEe,UAACO,KAAD,EAAW;AACxB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,UAAMC,KAAK,IAAIC,SAAJ,CAAcR,GAAd,CAAX;;AAEAO,SAAGE,gBAAH,CAAoB,MAApB,EAA4B,YAAM;AAChCF,WAAGG,IAAH,CAAQC,KAAKC,SAAL,CAAe;AACrB,uBAAaT;AADQ,SAAf,CAAR;AAGD,OAJD;AAKAI,SAAGE,gBAAH,CAAoB,OAApB,EAA6B,YAAM,CAAE,CAArC;AACAF,SAAGE,gBAAH,CAAoB,SAApB,EAA+B,eAAO;AACpC,YAAMI,OAAOF,KAAKG,KAAL,CAAWC,IAAIF,IAAf,CAAb;AACAR,gBAAQQ,KAAKG,SAAb;AACAT,WAAGU,KAAH;AACD,OAJD;;AAMAV,SAAGE,gBAAH,CAAoB,OAApB,EAA6B,UAACS,KAAD;AAAA,eAAWZ,OAAOY,MAAMC,KAAb,CAAX;AAAA,OAA7B;AACD,KAhBM,CAAP;AAiBD,G","file":"validateToken.js","sourcesContent":["/**\r\n * Created by Arnab Karmakar on 11/13/17.\r\n *\r\n * History -\r\n *  CopyTrader and MAM are two modules in Webtrader which requires token validation.\r\n *  This token is not user's token. It is either traders' or other users' token.\r\n *  In order to understand more about what these tokens are, please visit these screens.\r\n *  I had a detailed discussion with backend team. As of 13th Nov 2017, either there\r\n *  are no backend resources to create new API for token validation or they are\r\n *  reluctant to do so. Based on my discussion with Tom, he recommended this approach\r\n *  for now.\r\n */\r\nimport 'common/util';\r\nimport { socket_url, app_id } from 'websockets/binary_websockets';\r\n\r\nconst lang = (local_storage.get('i18n') || {value:\"en\"}).value;\r\nconst url = socket_url + '?app_id=' + app_id + '&l=' +lang;\r\n\r\nexport default (token) => {\r\n  return new Promise((resolve, reject) => {\r\n    const ws = new WebSocket(url);\r\n\r\n    ws.addEventListener('open', () => {\r\n      ws.send(JSON.stringify({\r\n        \"authorize\": token\r\n      }));\r\n    });\r\n    ws.addEventListener('close', () => {});\r\n    ws.addEventListener('message', msg => {\r\n      const data = JSON.parse(msg.data);\r\n      resolve(data.authorize);\r\n      ws.close();\r\n    });\r\n\r\n    ws.addEventListener('error', (event) => reject(event.error));\r\n  });\r\n};\r\n"]}